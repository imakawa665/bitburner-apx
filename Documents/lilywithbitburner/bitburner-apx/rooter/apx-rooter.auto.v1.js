/** apx-rooter.auto.v1.js */
export async function main(ns){const F=ns.flags([['interval',10000],['depth',1e9],['log',false]]);const snap=()=>({me:ns.getPlayer().skills.hacking,has:{NUKE:ns.fileExists('NUKE.exe','home'),SSH:ns.fileExists('BruteSSH.exe','home'),FTP:ns.fileExists('FTPCrack.exe','home'),SMTP:ns.fileExists('relaySMTP.exe','home'),HTTP:ns.fileExists('HTTPWorm.exe','home'),SQL:ns.fileExists('SQLInject.exe','home')}});let prev=snap();while(true){const now=snap();const oc=Object.values(now.has).filter(Boolean).length-(now.has.NUKE?1:0);const pc=Object.values(prev.has).filter(Boolean).length-(prev.has.NUKE?1:0);const changed=(now.me!==prev.me)||(oc!==pc)||(now.has.NUKE!==prev.has.NUKE);if(changed){const ops=[];if(now.has.SSH)ops.push(h=>ns.brutessh(h));if(now.has.FTP)ops.push(h=>ns.ftpcrack(h));if(now.has.SMTP)ops.push(h=>ns.relaysmtp(h));if(now.has.HTTP)ops.push(h=>ns.httpworm(h));if(now.has.SQL)ops.push(h=>ns.sqlinject(h));const me=now.me;const seen=new Set(['home']);const q=[['home',0]];const purchased=new Set((ns.getPurchasedServers?.()??[]));const skip=new Set(['home','darkweb',...purchased]);let rooted=0,tried=0;while(q.length){const [c,d]=q.shift();for(const n of ns.scan(c)){if(seen.has(n))continue;seen.add(n);if(d+1<=F.depth)q.push([n,d+1]);if(skip.has(n))continue;if(!now.has.NUKE)continue;const req=ns.getServerRequiredHackingLevel(n),need=ns.getServerNumPortsRequired(n);if(ns.hasRootAccess(n))continue;if(req>me)continue;if(need>ops.length)continue;for(const fn of ops){try{fn(n)}catch{}}try{ns.nuke(n)}catch{}tried++;if(ns.hasRootAccess(n)){rooted++;if(F.log)ns.tprint(`Rooted: ${n} (ports ${need}/${ops.length}, req ${req})`)}}}ns.tprint(`[rooter.auto] rooted+${rooted} / tried ${tried} / me=${me} / openers=${ops.length} / NUKE=${now.has.NUKE?'yes':'no'}`);prev=now}await ns.sleep(F.interval)}}
