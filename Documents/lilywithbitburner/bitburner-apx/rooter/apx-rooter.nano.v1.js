/** apx-rooter.nano.v1.js */
export async function main(ns){const F=ns.flags([['log',false],['depth',1e9]]);const openers=[['BruteSSH.exe',h=>ns.brutessh(h)],['FTPCrack.exe',h=>ns.ftpcrack(h)],['relaySMTP.exe',h=>ns.relaysmtp(h)],['HTTPWorm.exe',h=>ns.httpworm(h)],['SQLInject.exe',h=>ns.sqlinject(h)]].filter(([p])=>ns.fileExists(p,'home'));const oc=openers.length;const hasN=ns.fileExists('NUKE.exe','home');const me=ns.getPlayer().skills.hacking;const seen=new Set(['home']);const q=[['home',0]];const all=[];while(q.length){const [c,d]=q.shift();for(const n of ns.scan(c)){if(seen.has(n))continue;seen.add(n);if(d+1<=F.depth)q.push([n,d+1]);all.push([n,d+1])}}const purchased=new Set((ns.getPurchasedServers?.()??[]));const skip=new Set(['home','darkweb',...purchased]);let rooted=0,tried=0,skipped=0;for(const [h,dep] of all){if(skip.has(h)){skipped++;continue}const req=ns.getServerRequiredHackingLevel(h),need=ns.getServerNumPortsRequired(h);if(ns.hasRootAccess(h))continue;if(!hasN){skipped++;continue}if(req>me){skipped++;continue}if(need>oc){skipped++;continue}for(const[,fn]of openers){try{fn(h)}catch{}}try{ns.nuke(h)}catch{}tried++;if(ns.hasRootAccess(h)){rooted++;if(F.log)ns.tprint(`Rooted: ${h} (ports ${need}/${oc}, req ${req}, depth ${dep})`)}}ns.tprint(`[rooter.nano] rooted=${rooted}, tried=${tried}, skipped=${skipped}, openers=${oc}, NUKE=${hasN?'yes':'no'}`)}
