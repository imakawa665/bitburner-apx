/** apx-sing-actions.js (compact) */
export class Sing{constructor(ns,o={}){this.ns=ns;this.focus=!!o.focus;this.defaultCity=o.defaultCity??"Sector-12";this.defaultGym=o.defaultGym??"Powerhouse Gym";this.defaultUni=o.defaultUni??"Rothman University";this.reserve=Math.max(0,o.reserve??0);try{this.hasSF4=(ns.getOwnedSourceFiles?.()??[]).some(sf=>sf.n===4&&sf.lvl>=1)}catch{this.hasSF4=false}}async sleep(ms){await this.ns.sleep(ms)}toast(m,t="info",ms=3000){this.ns.toast(m,t,ms)}player(){return this.ns.getPlayer()}money(){return this.player().money??0}lowBudget(){return this.money()<=this.reserve}stopIfPossible(){try{this.ns.singularity.stopAction()}catch{}}async ensureCity(c){const p=this.player();if(p.city===c)return true;if(!this.hasSF4)return false;if((this.money()-this.reserve)<200_000){this.toast("予算不足: 都市移動スキップ","warning");return false}try{return this.ns.singularity.travelToCity(c)}catch{return false}}pickCrime({prefer="Mug",minChance=0.5}={}){const S=this.ns.singularity;const list=["Heist","Assassination","Homicide","Kidnap","Grand Theft Auto","Traffick Arms","Bond Forgery","Drugs","Larceny","Mug","Rob Store","Shoplift"];const chance=n=>{try{return S.getCrimeChance(n)||0}catch{return 0}};const score=n=>{try{const st=S.getCrimeStats(n);const c=chance(n);return(st.money*c)/Math.max(1,st.time)}catch{return 0}};if(chance(prefer)>=minChance)return prefer;let best="Mug",bs=-1;for(const n of list){const sc=score(n);if(sc>bs){bs=sc;best=n}}if(chance(best)>=0.15)return best;return"Shoplift"}async runCrimeLoop(o={}){if(!this.hasSF4)return;const S=this.ns.singularity;const until=o.untilMoney??0,min=o.minChance??0.5;while(true){if(o.stopSignal?.())break;if(this.lowBudget())break;const cur=Math.floor(this.money());if(until>0&&cur>=until)break;const name=this.pickCrime({prefer:o.prefer,minChance:min});let ms=0;try{ms=S.commitCrime(name,this.focus)}catch(e){this.toast(`commitCrime失敗: ${e}`,"error");break}await this.sleep(Math.max(1000,ms+50))}this.stopIfPossible()}async trainGymUntil(stat,target,stopSignal){if(!this.hasSF4||this.lowBudget())return;const S=this.ns.singularity;await this.ensureCity(this.defaultCity);try{if(!S.gymWorkout(this.defaultGym,stat,this.focus)){this.toast(`ジム開始失敗 (${this.defaultGym}, ${stat})`,"warning");return}}catch(e){this.toast(`gymWorkout失敗: ${e}`,"error");return}while(true){if(stopSignal?.())break;if(this.lowBudget())break;const p=this.player();const cur={strength:p.strength,defense:p.defense,dexterity:p.dexterity,agility:p.agility}[stat]??0;if(cur>=target)break;await this.sleep(1500)}this.stopIfPossible()}async studyUniversity({course="Study Computer Science",hours=1,until=null,stopSignal}={}){if(!this.hasSF4||this.lowBudget())return;const S=this.ns.singularity;await this.ensureCity(this.defaultCity);try{if(!S.universityCourse(this.defaultUni,course,this.focus)){this.toast(`大学開始失敗 (${this.defaultUni}, ${course})`,"warning");return}}catch(e){this.toast(`universityCourse失敗: ${e}`,"error");return}const endAt=Date.now()+hours*3600_000;while(true){if(stopSignal?.())break;if(this.lowBudget())break;if(until){const p=this.player();if((until.hacking&&p.hacking>=until.hacking)||(until.charisma&&p.charisma>=until.charisma))break}else if(Date.now()>=endAt)break;await this.sleep(1500)}this.stopIfPossible()}}
